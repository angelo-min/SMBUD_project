--query neo4j--
** caricata su documento

**1-FEATURING solo tra gente seria- (with parameters)
MATCH (a:Artist)-[:FEATURING]-(a2:Artist)
WHERE a.popularity >= $treshold AND a2.popularity >= $treshold
RETURN a,a2

call: :param treshold => 90 (ha senso da 90 che ritorna 24 relazioni)


2-generi più popolari- (non so se ha molto senso perchè la popolarità è dell'artista)
MATCH (a:Artist)-[:HAS_GENRE]->(g:Genre)
WITH g, SUM(a.popularity) AS totalPopularity
RETURN g, totalPopularity
ORDER BY totalPopularity DESC
LIMIT 10
-oppure potrebbe essere popolarità del genere intesa come quanti artisti appartengono a quel genere-
MATCH (a:Artist)-[:HAS_GENRE]->(g:Genre)
return g.name , count(*) as num_artists
ORDER BY num_artists DESC


**3-generi con più followers-
MATCH (a:Artist)-[:HAS_GENRE]->(g:Genre)
WITH g, SUM(a.followers) AS totalFollowers
RETURN g, totalFollowers
ORDER BY totalFollowers DESC
LIMIT 10
//it could be interesting to notice any difference between the results of the 2 queries above

//4- artists who have collaborated across multiple genres-
MATCH (g:Genre)<-[t:HAS_GENRE]-(a:Artist)-[f:FEATURING]->(a2:Artist)-[:HAS_GENRE]->(g)
WITH a.name as first_artist, a2.name as second_artist, count(g) as num_genres, collect(g.name) as genres
WHERE num_genres > 1
RETURN first_artist, second_artist, genres, num_genres
ORDER BY num_genres DESC

5-artists collaboration network visualization- CI METTE 6 ANNI
MATCH p=(:Country)<-[h:HIT]-(:Artist)-[:FEATURING]-(:Artist)-[h2:HIT]->(:Country)
RETURN p

//6- hits in un paese-
MATCH (a:Artist)-[h:HAS_HIT]->(c:Country)
WITH a.name as artist, h.hits as number_of_hits
WHERE c.name = $country_name
RETURN artist, number_of_hits
ORDER BY number_of_hits DESC

7-influential artists-
MATCH (a:Artist)
RETURN a.name, a.followers, a.popularity
ORDER BY a.followers DESC, a.popularity DESC
LIMIT 10

/* 8-shared genres- (non ce la fa con la memoria -> ce ne sono troppi neanche se si fa il limite 1 - 
credo perchè ci sono troppi generi in comune con 2 artisti)
soluzione, filtra in base ai generi più seguiti */
// Step 1: Find top 10 genres
MATCH (a:Artist)-[:HAS_GENRE]->(g:Genre)
WITH g, SUM(a.followers) AS totalFollowers
ORDER BY totalFollowers DESC
LIMIT 10
WITH COLLECT(g) AS top_genres
// Step 2: Find artist pairs sharing these genres
MATCH (a:Artist)-[:HAS_GENRE]->(shared_genre:Genre)<-[:HAS_GENRE]-(a2:Artist)
WHERE a <> a2 AND shared_genre IN top_genres
RETURN a.name, a2.name, COLLECT(shared_genre) as shared_genres
LIMIT 100

//9-top collaborations in a genre-
MATCH (g:Genre)<-[:HAS_GENRE]-(a:Artist)<-[:FEATURING]-(a2:Artist)-[:HAS_GENRE]->(g:Genre)
RETURN a.name, a2.name, g.name, (a.popularity + a2.popularity) as sum_popularity
ORDER BY sum_popularity DESC
LIMIT $limit

10-discover emerging artists in a genre-
MATCH (a:Artist)-[:HAS_GENRE]->(g:Genre)
WHERE a.popularity < 50 and g.name = "rap"
RETURN a.name, a.followers
ORDER BY a.followers DESC
LIMIT 10

11-una cazzata che potrebbe essere carina è vedere come si collegano due artisti improbabili-
MATCH p = shortestPath((a:Artist{name:"Jovanotti"})-[:FEATURING*]-(a2:Artist{name:"Eminem"}))
RETURN p

//12- top charts for selected countries
WITH ["ITA", "ESP", "GBR", "FRA", "USA"] as country_list
(si potrebbe fare per l'unione europea
eu_list = ['AUT', 'BEL', 'BGR', 'HRV', 'CYP', 'CZE', 'DNK', 'EST', 'FIN', 'FRA', 
'DEU', 'GRC', 'HUN', 'IRL', 'ITA', 'LVA', 'LTU', 'LUX', 'MLT', 'NLD', 'POL', 'PRT', 'ROU', 'SVK', 'SVN', 'ESP', 'SWE'])

MATCH (a:Artist)-[h:HAS_HIT]->(c:Country)
WHERE c.name in country_list
WITH a as artist, SUM(h.hits) as total_hits
RETURN artist.name, total_hits
ORDER BY total_hits DESC
LIMIT 100

