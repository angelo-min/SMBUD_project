--query neo4j--

-feat solo tra gente seria- (with parameters)
MATCH (a:Artist)-[:FEAT]-(a2:Artist)
WHERE a.popularity >= $treshold AND a2.popularity >= $treshold
RETURN a,a2

call: :param treshold => 80


-generi più popolari- (non so se ha molto senso perchè la popolarità è dell'artista)
MATCH (a:Artist)-[:TYPE]->(g:Genre)
WITH g, SUM(a.popularity) AS totalPopularity
RETURN g, totalPopularity
ORDER BY totalPopularity DESC
LIMIT $limit
-oppure potrebbe essere popolarità del genere intesa come quanti artisti appartengono a quel genere-
MATCH (a:Artists)-[:TYPE]->(g:Genre)
WITH g.NAME, count(*) as num_artists
ORDER BY num_artists DESC


-generi con più followers-
MATCH (a:Artist)-[:TYPE]->(g:Genre)
WITH g, SUM(a.followers) AS totalFollowers
RETURN g, totalFollowers
ORDER BY totalFollowers DESC
LIMIT $limit
//it could be interesting to notice any difference between the results of the 2 queries above

- artists who have collaborated across multiple genres-
MATCH (g:Genre)<-[t:TYPE]-(a:Artist)-[:FEAT]->(a2:Artist)
WITH a, count(g) as num_genres, collect(g) as genres
WHERE num_genres > 1
RETURN a, genres, num_genres

-artists collaboration network visualization-
MATCH p=(:Country)<-[h:HIT]-(:Artist)-[:FEAT]-(:Artist)-[h2:HIT]->(:Country)
RETURN p
